# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'main.ui'
#
# Created by: PyQt5 UI code generator 5.15.7
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_Dialog(object):
    def setupUi(self, Dialog):
        Dialog.setObjectName("Dialog")
        Dialog.resize(913, 653)
        Dialog.setAutoFillBackground(False)
        Dialog.setStyleSheet("background-color: rgb(216, 216, 216);")
        Dialog.setWindowFilePath("")
        self.widget = QtWidgets.QWidget(Dialog)
        self.widget.setGeometry(QtCore.QRect(0, 0, 911, 121))
        self.widget.setStyleSheet("background-color: rgb(170, 85, 255);")
        self.widget.setObjectName("widget")
        self.pushButton = QtWidgets.QPushButton(self.widget)
        self.pushButton.setGeometry(QtCore.QRect(760, 30, 93, 28))
        font = QtGui.QFont()
        font.setBold(True)
        self.pushButton.setFont(font)
        self.pushButton.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.pushButton.setObjectName("pushButton")
        self.pushButton_7 = QtWidgets.QPushButton(self.widget)
        self.pushButton_7.setGeometry(QtCore.QRect(760, 70, 93, 29))
        self.pushButton_7.setObjectName("pushButton_7")
        self.label_4 = QtWidgets.QLabel(Dialog)
        self.label_4.setGeometry(QtCore.QRect(10, 210, 131, 21))
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        self.label_4.setFont(font)
        self.label_4.setStyleSheet("color: rgb(170, 85, 255);")
        self.label_4.setObjectName("label_4")
        self.pushButton_2 = QtWidgets.QPushButton(Dialog)
        self.pushButton_2.setGeometry(QtCore.QRect(32, 260, 321, 28))
        self.pushButton_2.setStyleSheet("background-color: rgb(170, 255, 255);")
        self.pushButton_2.setObjectName("pushButton_2")
        self.tableWidget = QtWidgets.QTableWidget(Dialog)
        self.tableWidget.setGeometry(QtCore.QRect(20, 360, 351, 271))
        self.tableWidget.setObjectName("tableWidget")
        self.tableWidget.setColumnCount(3)
        self.tableWidget.setRowCount(0)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(2, item)
        self.tableWidget_2 = QtWidgets.QTableWidget(Dialog)
        self.tableWidget_2.setGeometry(QtCore.QRect(390, 240, 501, 361))
        self.tableWidget_2.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.tableWidget_2.setObjectName("tableWidget_2")
        self.tableWidget_2.setColumnCount(4)
        self.tableWidget_2.setRowCount(0)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_2.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_2.setHorizontalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_2.setHorizontalHeaderItem(2, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_2.setHorizontalHeaderItem(3, item)
        self.label_10 = QtWidgets.QLabel(Dialog)
        self.label_10.setGeometry(QtCore.QRect(690, 130, 101, 21))
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        self.label_10.setFont(font)
        self.label_10.setStyleSheet("color: rgb(170, 85, 255);")
        self.label_10.setObjectName("label_10")
        self.label_11 = QtWidgets.QLabel(Dialog)
        self.label_11.setGeometry(QtCore.QRect(810, 130, 91, 20))
        self.label_11.setStyleSheet("color: rgb(170, 85, 255);\n"
"font: 75 10pt \"MS Shell Dlg 2\";")
        self.label_11.setObjectName("label_11")
        self.lineEdit_2 = QtWidgets.QLineEdit(Dialog)
        self.lineEdit_2.setGeometry(QtCore.QRect(140, 210, 161, 21))
        self.lineEdit_2.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.lineEdit_2.setObjectName("lineEdit_2")
        self.label_12 = QtWidgets.QLabel(Dialog)
        self.label_12.setGeometry(QtCore.QRect(670, 610, 91, 20))
        self.label_12.setStyleSheet("color: rgb(7, 0, 2);\n"
"font: 75 10pt \"MS Shell Dlg 2\";")
        self.label_12.setObjectName("label_12")
        self.lineEdit = QtWidgets.QLineEdit(Dialog)
        self.lineEdit.setGeometry(QtCore.QRect(110, 320, 161, 21))
        self.lineEdit.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.lineEdit.setText("")
        self.lineEdit.setObjectName("lineEdit")
        self.lineEdit_3 = QtWidgets.QLineEdit(Dialog)
        self.lineEdit_3.setGeometry(QtCore.QRect(140, 150, 161, 21))
        self.lineEdit_3.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.lineEdit_3.setText("")
        self.lineEdit_3.setObjectName("lineEdit_3")
        self.label_5 = QtWidgets.QLabel(Dialog)
        self.label_5.setGeometry(QtCore.QRect(10, 150, 111, 21))
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        self.label_5.setFont(font)
        self.label_5.setStyleSheet("color: rgb(170, 85, 255);")
        self.label_5.setObjectName("label_5")
        self.pushButton_3 = QtWidgets.QPushButton(Dialog)
        self.pushButton_3.setGeometry(QtCore.QRect(10, 320, 93, 28))
        self.pushButton_3.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.pushButton_3.setObjectName("pushButton_3")
        self.pushButton_4 = QtWidgets.QPushButton(Dialog)
        self.pushButton_4.setGeometry(QtCore.QRect(290, 320, 61, 28))
        self.pushButton_4.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.pushButton_4.setObjectName("pushButton_4")
        self.edit = QtWidgets.QLineEdit(Dialog)
        self.edit.setGeometry(QtCore.QRect(470, 180, 161, 21))
        self.edit.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.edit.setObjectName("edit")
        self.delete_2 = QtWidgets.QLineEdit(Dialog)
        self.delete_2.setGeometry(QtCore.QRect(470, 130, 161, 21))
        self.delete_2.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.delete_2.setObjectName("delete_2")
        self.edit_2 = QtWidgets.QLineEdit(Dialog)
        self.edit_2.setGeometry(QtCore.QRect(640, 180, 91, 21))
        self.edit_2.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.edit_2.setObjectName("edit_2")
        self.pushButton_5 = QtWidgets.QPushButton(Dialog)
        self.pushButton_5.setGeometry(QtCore.QRect(360, 130, 93, 29))
        self.pushButton_5.setObjectName("pushButton_5")
        self.pushButton_6 = QtWidgets.QPushButton(Dialog)
        self.pushButton_6.setGeometry(QtCore.QRect(360, 180, 93, 29))
        self.pushButton_6.setObjectName("pushButton_6")
        self.pushButton_8 = QtWidgets.QPushButton(Dialog)
        self.pushButton_8.setGeometry(QtCore.QRect(390, 610, 251, 29))
        self.pushButton_8.setStyleSheet("background-color: rgb(0, 170, 255);")
        self.pushButton_8.setObjectName("pushButton_8")

        self.retranslateUi(Dialog)
        QtCore.QMetaObject.connectSlotsByName(Dialog)

    def retranslateUi(self, Dialog):
        _translate = QtCore.QCoreApplication.translate
        Dialog.setWindowTitle(_translate("Dialog", "Dialog"))
        self.pushButton.setText(_translate("Dialog", "Profile"))
        self.pushButton_7.setText(_translate("Dialog", "Log Out"))
        self.label_4.setText(_translate("Dialog", "Quantity"))
        self.pushButton_2.setText(_translate("Dialog", "Add"))
        item = self.tableWidget.horizontalHeaderItem(0)
        item.setText(_translate("Dialog", "Name"))
        item = self.tableWidget.horizontalHeaderItem(1)
        item.setText(_translate("Dialog", "price"))
        item = self.tableWidget.horizontalHeaderItem(2)
        item.setText(_translate("Dialog", "Amount"))
        item = self.tableWidget_2.horizontalHeaderItem(0)
        item.setText(_translate("Dialog", "Name"))
        item = self.tableWidget_2.horizontalHeaderItem(1)
        item.setText(_translate("Dialog", "price"))
        item = self.tableWidget_2.horizontalHeaderItem(2)
        item.setText(_translate("Dialog", "quantity"))
        item = self.tableWidget_2.horizontalHeaderItem(3)
        item.setText(_translate("Dialog", "Total"))
        self.label_10.setText(_translate("Dialog", "Balance"))
        self.label_11.setText(_translate("Dialog", "2000$"))
        self.label_12.setText(_translate("Dialog", "100$"))
        self.label_5.setText(_translate("Dialog", "product id "))
        self.pushButton_3.setText(_translate("Dialog", "search"))
        self.pushButton_4.setText(_translate("Dialog", "clear"))
        self.pushButton_5.setText(_translate("Dialog", "delete item"))
        self.pushButton_6.setText(_translate("Dialog", "edit item"))
        self.pushButton_8.setText(_translate("Dialog", "Total"))
        self.loaddata()
        dict=[]
        self.pushButton_2.clicked.connect(self.add)
        self.pushButton_3.clicked.connect(self.search)
        self.pushButton_4.clicked.connect(self.loaddata)
        self.pushButton_5.clicked.connect(self.gotodelete)
        self.pushButton_6.clicked.connect(self.gotoedit)
        self.pushButton_8.clicked.connect(self.calctotal)


    def calctotal(self):
        total_gold = 0
        for item in dict:
            total_gold += int(item["total"])
        self.label_12.setText(str(total_gold)+" "+"$")




    def gotoedit(self):
        c = self.edit.text()
        x =int(self.edit_2.text())
        for i in range(len(dict)):
            if dict[i]["name"] == c:
                dict[i]["quantity"]=x
                dict[i]["total"] = x * dict[i]["price"]
                break
        self.tableWidget_2.setRowCount(len(dict))
        row =0
        for person in dict :
            self.tableWidget_2.setItem(row,0, QtWidgets.QTableWidgetItem(person["name"]))
            self.tableWidget_2.setItem(row,1, QtWidgets.QTableWidgetItem(str(person["price"])))
            self.tableWidget_2.setItem(row,2, QtWidgets.QTableWidgetItem(str(person["quantity"])))
            self.tableWidget_2.setItem(row,3, QtWidgets.QTableWidgetItem(str(person["total"])))
            row =row+1
        print(dict)

    def gotodelete(self):
        z = self.delete_2.text()
        print(z)
        for i in range(len(dict)):
            if dict[i]["name"] == z:
                del dict[i]
                break
        self.tableWidget_2.setRowCount(len(dict))
        row =0
        for person in dict :
            self.tableWidget_2.setItem(row,0, QtWidgets.QTableWidgetItem(person["name"]))
            self.tableWidget_2.setItem(row,1, QtWidgets.QTableWidgetItem(str(person["price"])))
            self.tableWidget_2.setItem(row,2, QtWidgets.QTableWidgetItem(str(person["quantity"])))
            self.tableWidget_2.setItem(row,3, QtWidgets.QTableWidgetItem(str(person["total"])))
            row =row+1




    def search(self):
        people =[{"name":"Dell","price":45,"amount":"50"},{"name":"hp","price":10,"amount":"100"},{"name":"oppo","price":100,"amount":"50"}
        ,{"name":"screen","price":10,"amount":"50"},{"name":"buttery","price":5,"amount":"50"},
        {"name":"DC_charge","price":57,"amount":"50"}
        ]
        s = self.lineEdit.text()
        print(s)
        ahmed=[]
        ahmed.append(next(x for x in people if x["name"] ==s))
        print(dict)
        self.tableWidget.setRowCount(1)
        for person in ahmed :
            self.tableWidget.setItem(0,0, QtWidgets.QTableWidgetItem(person["name"]))
            self.tableWidget.setItem(0,1, QtWidgets.QTableWidgetItem(str(person["price"])))
            self.tableWidget.setItem(0,2, QtWidgets.QTableWidgetItem(str(person["amount"])))

    def loaddata(self):

        people =[{"name":"Dell","price":45,"amount":"50"},{"name":"hp","price":10,"amount":"100"},{"name":"oppo","price":100,"amount":"50"}
        ,{"name":"screen","price":10,"amount":"50"},{"name":"buttery","price":5,"amount":"50"},
        {"name":"DC_charge","price":57,"amount":"50"}
        ]
        self.tableWidget.setRowCount(len(people))
        row =0
        for person in people :
            self.tableWidget.setItem(row,0, QtWidgets.QTableWidgetItem(person["name"]))
            self.tableWidget.setItem(row,1, QtWidgets.QTableWidgetItem(str(person["price"])))
            self.tableWidget.setItem(row,2, QtWidgets.QTableWidgetItem(str(person["amount"])))
            row =row+1


    def add (self):
        s = self.lineEdit_3.text()
        y = int(self.lineEdit_2.text())
        global dict
        people = [{"name": "Dell", "price": 45, "amount": "50"}, {"name": "hp", "price": 10, "amount": "100"},
                  {"name": "oppo", "price": 100, "amount": "50"}
            , {"name": "screen", "price": 10, "amount": "50"}, {"name": "buttery", "price": 5, "amount": "50"},
                  {"name": "DC_charge", "price": 57, "amount": "50"}
                  ]

        if len(dict)==0:
            dict.append(next(x for x in people if x["name"] == s))
            dict[0]["quantity"] = y
            dict[0]["total"] = y * dict[0]["price"]
            print(dict)
            self.tableWidget_2.setRowCount(len(dict))
            row =0
            for person in dict :
                self.tableWidget_2.setItem(row,0, QtWidgets.QTableWidgetItem(person["name"]))
                self.tableWidget_2.setItem(row,1, QtWidgets.QTableWidgetItem(str(person["price"])))
                self.tableWidget_2.setItem(row,2, QtWidgets.QTableWidgetItem(str(person["quantity"])))
                self.tableWidget_2.setItem(row,3, QtWidgets.QTableWidgetItem(str(person["total"])))
                row =row+1

        else:
            list_of_all_values = [value for elem in dict
                                  for value in elem.values()]
            value =s
            if value in list_of_all_values:
                if next(x for x in dict if x["name"] == s) in dict:
                    tom_index = next((index for (index, d) in enumerate(dict) if d["name"] == s), None)
                    print(tom_index)
                    q = dict[tom_index]["quantity"]
                    dict[tom_index]["quantity"] = q + y
                    dict[tom_index]["total"] = (q + y) * dict[tom_index]["price"]
                    del_key = "amount"
                    print(dict)
                    self.tableWidget_2.setRowCount(len(dict))
                    row =0
                    for person in dict :
                        self.tableWidget_2.setItem(row,0, QtWidgets.QTableWidgetItem(person["name"]))
                        self.tableWidget_2.setItem(row,1, QtWidgets.QTableWidgetItem(str(person["price"])))
                        self.tableWidget_2.setItem(row,2, QtWidgets.QTableWidgetItem(str(person["quantity"])))
                        self.tableWidget_2.setItem(row,3, QtWidgets.QTableWidgetItem(str(person["total"])))
                        row =row+1

                else:
                    print("Ahmed")


            else:
                dict.append(next(x for x in people if x["name"] == s))
                x = next((index for (index, d) in enumerate(dict) if d["name"] == s), None)
                dict[x]["quantity"] = y
                del_key = "amount"
                dict[x]["total"] = y * dict[x]["price"]
                print(dict)
                self.tableWidget_2.setRowCount(len(dict))
                row =0
                for person in dict :
                    self.tableWidget_2.setItem(row,0, QtWidgets.QTableWidgetItem(person["name"]))
                    self.tableWidget_2.setItem(row,1, QtWidgets.QTableWidgetItem(str(person["price"])))
                    self.tableWidget_2.setItem(row,2, QtWidgets.QTableWidgetItem(str(person["quantity"])))
                    self.tableWidget_2.setItem(row,3, QtWidgets.QTableWidgetItem(str(person["total"])))
                    row =row+1




if __name__ == "__main__":
    import sys
    dict=[]
    app = QtWidgets.QApplication(sys.argv)
    Dialog = QtWidgets.QDialog()
    ui = Ui_Dialog()
    ui.setupUi(Dialog)
    Dialog.show()
    sys.exit(app.exec_())
